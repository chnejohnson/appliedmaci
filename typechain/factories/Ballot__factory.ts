/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ballot, BallotInterface } from "../Ballot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_coordinator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "coordinator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "getVoiceCredits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialVoiceCredit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b60380380610b6083398181016040528101906100329190610144565b600061004261012760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101b6565b600033905090565b60008151905061013e8161019f565b92915050565b60006020828403121561015657600080fd5b60006101648482850161012f565b91505092915050565b60006101788261017f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101a88161016d565b81146101b357600080fd5b50565b61099b806101c56000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100da5780638da5cb5b146100e4578063b36543a914610102578063f2fde38b146101325761007d565b80630a0090971461008257806324b8fbf6146100a05780633ed57d58146100bc575b600080fd5b61008a61014e565b60405161009791906107b2565b60405180910390f35b6100ba60048036038101906100b59190610661565b610174565b005b6100c46101b6565b6040516100d1919061082f565b60405180910390f35b6100e26101bb565b005b6100ec61030e565b6040516100f991906107b2565b60405180910390f35b61011c60048036038101906101179190610661565b610337565b604051610129919061082f565b60405180910390f35b61014c60048036038101906101479190610638565b610343565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101b26040518060400160405280600f81526020017f5573657220726567697374657265640000000000000000000000000000000000815250610505565b5050565b606381565b6101c361059e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610250576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102479061080f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006063905092915050565b61034b61059e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cf9061080f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610448576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043f906107ef565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61059b8160405160240161051991906107cd565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105a6565b50565b600033905090565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000813590506105de8161094e565b92915050565b600082601f8301126105f557600080fd5b813561060861060382610877565b61084a565b9150808252602083016020830185838301111561062457600080fd5b61062f8382846108fb565b50505092915050565b60006020828403121561064a57600080fd5b6000610658848285016105cf565b91505092915050565b6000806040838503121561067457600080fd5b6000610682858286016105cf565b925050602083013567ffffffffffffffff81111561069f57600080fd5b6106ab858286016105e4565b9150509250929050565b6106be816108bf565b82525050565b60006106cf826108a3565b6106d981856108ae565b93506106e981856020860161090a565b6106f28161093d565b840191505092915050565b600061070a6026836108ae565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006107706020836108ae565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6107ac816108f1565b82525050565b60006020820190506107c760008301846106b5565b92915050565b600060208201905081810360008301526107e781846106c4565b905092915050565b60006020820190508181036000830152610808816106fd565b9050919050565b6000602082019050818103600083015261082881610763565b9050919050565b600060208201905061084460008301846107a3565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561086d57600080fd5b8060405250919050565b600067ffffffffffffffff82111561088e57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006108ca826108d1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561092857808201518184015260208101905061090d565b83811115610937576000848401525b50505050565b6000601f19601f8301169050919050565b610957816108bf565b811461096257600080fd5b5056fea2646970667358221220d66ebb848d4c2b07ac176ba7775b3dc18263dda348ce3f103ed4cf46877434d764736f6c634300060c0033";

export class Ballot__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _coordinator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ballot> {
    return super.deploy(_coordinator, overrides || {}) as Promise<Ballot>;
  }
  getDeployTransaction(
    _coordinator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_coordinator, overrides || {});
  }
  attach(address: string): Ballot {
    return super.attach(address) as Ballot;
  }
  connect(signer: Signer): Ballot__factory {
    return super.connect(signer) as Ballot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotInterface {
    return new utils.Interface(_abi) as BallotInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ballot {
    return new Contract(address, _abi, signerOrProvider) as Ballot;
  }
}
